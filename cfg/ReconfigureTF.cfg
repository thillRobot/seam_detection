#!/usr/bin/env python
PACKAGE = "seam_detection"

#import rospy
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# get default params from rosparam config file
#camera_roll=rospy.get_param("camera_roll")

# add parameters, gen.add(NAME,TYPE,LEVEL,DESCRIPTION,DEFAULT,MIN,MAX)
gen.add("camera_roll", double_t, 0, "camera roll angle (deg)", 0, -360, 360)
gen.add("camera_pitch", double_t, 0, "camera pitch angle (deg)", 0, -360, 360)
gen.add("camera_yaw", double_t, 0, "camera yaw angle (deg)", 0, -360, 360)

gen.add("camera_x", double_t, 0, "camera x position (in)", 0, -50, 50)
gen.add("camera_y", double_t, 0, "camera y position (in)", 0, -50, 50)
gen.add("camera_z", double_t, 0, "camera z position (in)", 0, -50, 50)

gen.add("camera_mount_roll", double_t, 0, "camera mount roll angle (deg)", 0, -360, 360)
gen.add("camera_mount_pitch", double_t, 0, "camera mount pitch angle (deg)", 0, -360, 360)
gen.add("camera_mount_yaw", double_t, 0, "camera mount yaw angle (deg)", 0, -360, 360)

gen.add("camera_mount_x", double_t, 0, "camera mount x position (in)", 0, -50, 50)
gen.add("camera_mount_y", double_t, 0, "camera mount y position (in)", 0, -50, 50)
gen.add("camera_mount_z", double_t, 0, "camera mount z position (in)", 0, -50, 50)

#  gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#  gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#  gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#  gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

# this line defines the name of the generated header file 
exit(gen.generate(PACKAGE, "seam_detection", "ReconfigureTF"))
